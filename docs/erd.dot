strict digraph {
  // label="Project Structure"
  labelloc=t
  concentrate=true
  graph [
    newrank=true
    ranker="tight-tree"
    rankdir=LR
    overlap="prism"
  ]

  subgraph clusterPackages {
    label="Packages"
    edge [dir=none];
    color="#333333"

    subgraph clusterTypes {
      label="Type (/path)"
      rank=same
      component [label="Components (/component)"]
      service [label="Services (/service)"]
      interface [label="Interfaces (/interface)"]
    }

    subgraph clusterExamples {
      label="Example packages\nby classname"
      rank=same

      ComponentHeader
      ComponentConfirmInput
      ServicePaymentEvents
      InterfacePaymentEvent
    }

    "/libs"->{component, service, interface}
    component:e->{ComponentHeader, ComponentConfirmInput}
    service->{ServicePaymentEvents}
    interface->{InterfacePaymentEvent}
  }

  subgraph clusterPrivate {
    label="Private NPM"
    color="#aaaaaa"
    style=dashed

    subgraph clusterNpm {
      label="Published name"
      style=solid; color="#888888"
      edge [style=dashed, arrowhead=o]
      node [style=dashed]
      rank=same

      sPaymentEvents [label="@republicservices/service-payment-events"]
      ServicePaymentEvents->sPaymentEvents

      iPaymentEvents [label="@republicservices/interface-payment-events"]
      InterfacePaymentEvent->iPaymentEvents

      cHeader [label="@republicservices/component-header"]
      ComponentHeader->cHeader

      cConfirmInput [label="@republicservices/component-confirm-input"]
      ComponentConfirmInput->cConfirmInput
    }
  }

  subgraph clusterExternal {
    label="Example external\nRSI applications"
    style=dashed; color="#aaaaaa"
    node [style=dashed]
    edge [style=dashed, arrowhead=o]
    rank=same

    cConfirmInput:e,iPaymentEvents,sPaymentEvents->Dragonboat:w
    cConfirmInput:e,cHeader:e->Dragonboat:w,Redesign:w
  }

  subgraph clusterApps {
    label="Apps (/path)"
    edge [dir=back, style=dotted, arrowhead=o]

    subgraph {
      rank=same
      guide [label="Design Guide (/guide)"]
      e2e [label="Design Guide E2E (/guide-e2e)"]
    }

    subgraph clusterRequire {
      label="Internal import name"
      edge [color="#666666", dir=none, style=solid]

      rHeader [label="@republicservices/component/header"]
      rHeader->ComponentHeader
      rConfirmInput [label="@republicservices/component/confirm-input"]
      rConfirmInput->ComponentConfirmInput
    }

    e2e->guide
    guide:e->rHeader,rConfirmInput
  }

  "/apps"->guide

  subgraph {
    rank=same;
    ComponentConfirmInput
    ComponentHeader
    rHeader
    rConfirmInput
  }
}
